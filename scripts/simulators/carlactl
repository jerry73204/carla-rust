#!/usr/bin/env bash
set -euo pipefail

SCRIPT_DIR="$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"
REPO_PATH="$(dirname "$(dirname "$SCRIPT_DIR")")"

usage() {
    echo "Usage:" >&2
    echo "  carlactl (start|stop|restart|status|logs) VERSION" >&2
    echo "  carlactl (install|uninstall)" >&2
    echo "" >&2
    echo "Examples:" >&2
    echo "  carlactl start 0.9.16" >&2
    echo "  carlactl restart 0.9.16" >&2
    echo "  carlactl status 0.9.16" >&2
    echo "  carlactl install" >&2
    exit 1
}

if [ $# -eq 0 ]; then
    usage
fi

COMMAND="$1"

# Handle install/uninstall
if [ "$COMMAND" = "install" ] || [ "$COMMAND" = "uninstall" ]; then
    if [ $# -ne 1 ]; then
        echo "Error: $COMMAND command takes no arguments" >&2
        usage
    fi

    VERSIONS=("0.9.14" "0.9.15" "0.9.16")

    if [ "$COMMAND" = "install" ]; then
        mkdir -p "$HOME/.config/systemd/user"
        for ver in "${VERSIONS[@]}"; do
            SERVICE="carla@${ver}.service"
            SERVICE_FILE="$HOME/.config/systemd/user/$SERVICE"

            if [ -f "$SERVICE_FILE" ]; then
                echo "Already installed: $SERVICE"
            else
                sed "s|REPO_PATH|$REPO_PATH|g" "$SCRIPT_DIR/carlactl.service.template" > "$SERVICE_FILE"
                echo "Installed: $SERVICE"
            fi
        done
        systemctl --user daemon-reload
        echo "Services installed successfully"
    else
        # uninstall
        for ver in "${VERSIONS[@]}"; do
            SERVICE="carla@${ver}.service"
            SERVICE_FILE="$HOME/.config/systemd/user/$SERVICE"

            if [ -f "$SERVICE_FILE" ]; then
                systemctl --user stop "$SERVICE" 2>/dev/null || true
                rm "$SERVICE_FILE"
                echo "Uninstalled: $SERVICE"
            fi
        done
        systemctl --user daemon-reload
        echo "Services uninstalled successfully"
    fi
    exit 0
fi

# Handle start/stop/status/logs
if [ $# -ne 2 ]; then
    echo "Error: Command '$COMMAND' requires VERSION argument" >&2
    usage
fi

VERSION="$2"

# Validate command
case "$COMMAND" in
    start|stop|restart|status|logs) ;;
    *)
        echo "Error: Invalid command '$COMMAND'" >&2
        usage
        ;;
esac

# Validate version
RUN_SCRIPT="$SCRIPT_DIR/startup/run-$VERSION.sh"
if [ ! -f "$RUN_SCRIPT" ]; then
    echo "Error: CARLA version $VERSION not found" >&2
    echo "Expected run script: $RUN_SCRIPT" >&2
    exit 1
fi

# Service name
SERVICE="carla@${VERSION}.service"
SERVICE_FILE="$HOME/.config/systemd/user/$SERVICE"

# Check if service is installed
if [ ! -f "$SERVICE_FILE" ]; then
    echo "Error: Service not installed for CARLA $VERSION" >&2
    echo "" >&2
    echo "Install services first:" >&2
    echo "  carlactl install" >&2
    exit 1
fi

# Execute command
case "$COMMAND" in
    start)
        systemctl --user start "$SERVICE"
        echo "Started CARLA $VERSION"
        echo "Check status: carlactl status $VERSION"
        echo "View logs: carlactl logs $VERSION"
        ;;
    stop)
        systemctl --user stop "$SERVICE"
        echo "Stopped CARLA $VERSION"
        ;;
    restart)
        systemctl --user restart "$SERVICE"
        echo "Restarted CARLA $VERSION"
        echo "Check status: carlactl status $VERSION"
        echo "View logs: carlactl logs $VERSION"
        ;;
    status)
        systemctl --user status "$SERVICE"
        ;;
    logs)
        journalctl --user -u "$SERVICE" -f
        ;;
esac
